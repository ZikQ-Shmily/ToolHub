name: Build & Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'
  workflow_dispatch: {}

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npm run build

      - name: Build Windows
        if: runner.os == 'Windows'
        run: npx electron-builder --win nsis portable --publish never

      - name: Build macOS
        if: runner.os == 'macOS'
        run: npx electron-builder --mac dmg zip --publish never

      - name: Build Linux
        if: runner.os == 'Linux'
        run: npx electron-builder --linux AppImage deb --publish never

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: toolhub-${{ runner.os }}
          path: |
            release/*.exe
            release/*.dmg
            release/*.zip
            release/*.AppImage
            release/*.deb
            release/*-unpacked/**
          if-no-files-found: warn

  release:
    name: Draft GitHub Release (on tag)
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
