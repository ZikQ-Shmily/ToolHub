name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    env:
      CSC_IDENTITY_AUTO_DISCOVERY: "false"
      ELECTRON_BUILDER_DISABLE_NOTARIZE: "true"

    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows
          - os: windows-latest
            arch: x64
          - os: windows-latest
            arch: arm64

          # Linux
          - os: ubuntu-latest
            arch: x64
          - os: ubuntu-latest
            arch: arm64

          # macOS
          - os: macos-13
            arch: x64
          - os: macos-latest
            arch: arm64

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci
      - run: npm run build

      # Windows
      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: npx electron-builder --win nsis portable --${{ matrix.arch }} --publish never

      # macOS
      - name: Build macOS
        if: startsWith(matrix.os, 'macos')
        run: npx electron-builder --mac dmg zip --${{ matrix.arch }} --publish never

      # Linux
      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: npx electron-builder --linux AppImage deb --${{ matrix.arch }} --publish never

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: toolhub-${{ matrix.os }}-${{ matrix.arch }}
          path: release/
          if-no-files-found: warn

  release:
    name: Publish GitHub Release (on tag)
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Delete existing assets in release (if any)
        uses: actions/github-script@v7
        with:
          script: |
            const tag = context.ref.replace('refs/tags/', '');
            try {
              const release = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag,
              });
              const assets = await github.paginate(github.rest.repos.listReleaseAssets, {
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: release.data.id,
                per_page: 100,
              });
              for (const asset of assets) {
                core.info(`Deleting asset: ${asset.name} (${asset.id})`);
                await github.rest.repos.deleteReleaseAsset({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  asset_id: asset.id,
                });
              }
            } catch (e) {
              core.info(`No existing release for ${tag}, skipping cleanup.`);
            }

      - name: Create/Update Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          make_latest: true
          name: ToolHub ${{ github.ref_name }}
          generate_release_notes: true
          files: |
            artifacts/**/*.exe
            artifacts/**/*.dmg
            artifacts/**/*.zip
            artifacts/**/*.AppImage
            artifacts/**/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
