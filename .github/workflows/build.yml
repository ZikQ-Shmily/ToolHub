name: Build (validate all platforms)

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    env:
      CSC_IDENTITY_AUTO_DISCOVERY: "false"
      ELECTRON_BUILDER_DISABLE_NOTARIZE: "true"

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64, arm64]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci
      - run: npm run build

      # Windows
      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: npx electron-builder --win nsis portable --${{ matrix.arch }} --publish never

      # macOS
      - name: Build macOS
        if: matrix.os == 'macos-latest'
        run: npx electron-builder --mac dmg zip --${{ matrix.arch }} --publish never

      # Linux
      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: npx electron-builder --linux AppImage deb --${{ matrix.arch }} --publish never

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: toolhub-${{ matrix.os }}-${{ matrix.arch }}
          path: release/
          if-no-files-found: warn
